name: Release

on:
  release:
    types: [created]

jobs: 
  release-core:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: scaleway-core
    steps:
      - uses: actions/checkout@v5
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "poetry"
      - name: Update lock file
        run: poetry lock
      - name: Install dependencies and library
        run: poetry install
      - name: Set package version
        run: poetry version $(echo "${{ github.ref }}" | cut -d "/" -f 3)
      - name: Build package
        run: poetry build
      - name: Publish package
        run: poetry publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      - name: Wait for package to be available
        run: sleep 60
  
  release:
    needs:
      - release-core
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lib:
          - scaleway
          - scaleway-async
    defaults:
      run:
        working-directory: ${{ matrix.lib }}
    steps:
      - uses: actions/checkout@v5
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "poetry"
      - name: Set local scaleway-core version
        run: poetry version $(echo "${{ github.ref }}" | cut -d "/" -f 3)
        working-directory: scaleway-core
      - name: Set scaleway-core version in the package
        run: poetry add scaleway-core@$(echo "${{ github.ref }}" | cut -d "/" -f 3)
      - name: Update lock file
        run: poetry lock
      - name: Install dependencies and library
        run: poetry install
      - name: Set package version
        run: poetry version $(echo "${{ github.ref }}" | cut -d "/" -f 3)
      - name: Build package
        run: poetry build
      - name: Publish package
        run: poetry publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
